package main

import (
	"fmt"
)

var finemasterBaseUrl = "/finemaster"

templ finemaster(pass string, players []PlayerWithFines, pFines []PresetFine, qp FineMasterQueryParams) {
	<html hx-boost="true">
		@header()
		<body>
			<div class="bg-gray-900 text-center p-5">
				<h1 class="text-xl md:text-3xl lg:text-5xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-teal-400">
					Fine Master Zone
				</h1>
			</div>
			<div class="grid grid-cols-1 gap-2">
				@fineAdd(fmt.Sprintf("%s/%s", finemasterBaseUrl, pass), qp.FinesOpen, players, pFines, true)
				@playersManage(fmt.Sprintf("%s/%s", finemasterBaseUrl, pass), players, qp.PlayerOpen)
			</div>
			<div class="container mx-auto p-4">
				<div class="flex items-center justify-center bg-gray-100 mx-auto">
					<ul>
						for _, p := range players {
							<li class="mb-2">
								<div _="on click toggle .hidden on next &lt;section/&gt;" class={ bigPri }>
									{ p.Name }
									- 
									{ fmt.Sprintf("$%d (%d)", p.TotalFines, p.TotalFineCount) }
								</div>
								<section class="fines-info hidden">
									<div class="p-2">
										<div class="p-2">
											for _, f := range p.Fines {
												<div class="mt-1">
													<p>{ f.Reason } - { fmt.Sprintf("$%.0f", f.Amount) }</p>
												</div>
											}
										</div>
									</div>
								</section>
								<section class="hidden quick-fine">
									for _, pf := range pFines {
										if pf.Approved {
											<form class=" inline-flex mx-2 space-y-2">
												<div hidden class={ fmt.Sprintf("fine-group-%d-%d", pf.ID, p.ID) }>
													<input type="hidden" name="playerId" value={ fmt.Sprintf("%v", p.ID) }/>
													<input type="hidden" name="presetFineId" value={ fmt.Sprintf("%v", pf.ID) }/>
													<input type="hidden" name="approved" value="on"/>
												</div>
												<button hx-post="/fines" hx-swap="this" hx-include={ fmt.Sprintf(".fine-group-%d-%d", pf.ID, p.ID) } class={ bigAdd }>
													{ fmt.Sprintf("%s ($%v)", pf.Reason, pf.Amount) }
												</button>
											</form>
										}
									}
								</section>
							</li>
						}
					</ul>
				</div>
				<div _="on click toggle .hidden on .quick-fine" class={ bigPri }>
					Toggle Quick Fines
				</div>
			</div>
			<div id="fine-list-container" hx-get="/fines" hx-trigger="load once" hx-swap="OuterHTML" class="w-full text-center">loading latest..</div>
			@presetFines(fmt.Sprintf("%s/%s", finemasterBaseUrl, pass), qp.PresetFinesOpen, pFines)
			@pageFooter()
		</body>
	</html>
}

templ presetFines(baseUrl string, isOpen bool, presetFines []PresetFine) {
	if isOpen {
		<div class="px-8 py-6 text-left bg-white shadow-xl m-10" id="preset-fine">
			<h3 class="text-2xl font-bold text-center">Add or Approve Fines</h3>
			<div class="w-full flex justify-center items-center py-2">
				<p>Approve fines submitted, or add new fines</p>
			</div>
			<div class="grid grid-cols-1 md:grid-cols-2 gap-4">
				<div class="text-2xl">
					<h1 class="font-bold text-center">Approve/Existing Preset Fines</h1>
					for _, fine := range presetFines {
						<div class="mt-2 text-center">
							<div>
								if !fine.Approved {
									<button hx-post={ fmt.Sprintf("/preset-fines/approve?pfid=%d", fine.ID) }>‚òê ‚ú®</button>
								}
								{ fine.Reason }
								- 
								{ fmt.Sprintf("$%.0f", fine.Amount) }
								<button hx-delete={ fmt.Sprintf("/preset-fines?pfid=%d", fine.ID) }>üóë</button>
							</div>
						</div>
					}
				</div>
				<div>
					<form hx-post="/preset-fines" class="mt-4">
						<div>
							<label for="reason" class="block">
								<input required type="text" name="reason" id="reason" placeholder="Reason for the fine" class="w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600"/>
							</label>
						</div>
						<div class="mt-4">
							<label for="amount" class="block">Amount ($)</label>
							<input required type="number" step="0.01" name="amount" id="amount" placeholder="Amount" class="p-2 w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600"/>
						</div>
						<div class="mt-4">
							<label class="block"><input type="checkbox" checked="checked" name="approved" class="text-2xl m-2 py-2 mt-2 p-2 "/>Approved</label>
						</div>
						<div class="flex items-center justify-between mt-4">
							<button type="submit" class={ bigAdd }>Add Preset Fine</button>
						</div>
					</form>
					<div class="flex justify-center w-full">
						<a href={ makeSafeUrl(baseUrl, false, false, false) } class={ bigSec }>Close</a>
					</div>
				</div>
			</div>
		</div>
	} else {
		<div class="flex justify-center w-full">
			<a href={ makeSafeUrlWithAnchor(baseUrl, false, false, true, "preset-fine") } class={ bigPri }>Add Fines</a>
		</div>
	}
}

templ playersManage(baseUrl string, players []PlayerWithFines, isOpen bool) {
	if isOpen {
		<div class="flex items-center justify-center bg-gray-100" id="players-manage">
			<div class="px-8 py-6 text-left bg-white shadow-xl m-10">
				<!-- Section for Adding New Player -->
				<h3 class="text-2xl font-bold text-center">Add New Player</h3>
				<form hx-post="/players" method="POST" class="mt-4">
					<div>
						<label for="name" class="block">Name</label>
						<input required type="text" name="name" id="name" placeholder="Name" class="w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600"/>
					</div>
					<div class="flex items-center w-full">
						<button type="submit" class={ bigAdd }>Add Player</button>
					</div>
				</form>
				<div>
					<!-- Section for Deleting Existing Player -->
					<h3 class="text-2xl font-bold text-center mt-8">Delete Player</h3>
					for _, p := range players {
						<button type="submit" hx-delete={ fmt.Sprintf("/players?playerId=%d", p.ID) } hx-confirm={ fmt.Sprintf("Are you sure you want to delete %s?", p.Name) } class={ bigDel }>Delete { p.Name }</button>
					}
				</div>
				<div class="flex justify-center w-full mt-4">
					<a href={ makeSafeUrl(baseUrl, false, false, false) } hx-transition="true" class={ bigSec }>Close</a>
				</div>
			</div>
		</div>
	} else {
		<div class="flex justify-center w-full">
			<a href={ makeSafeUrlWithAnchor(baseUrl, false, true, false, "players-manage") } hx-transition="true" class={ bigPri }>Manage Players</a>
		</div>
	}
}

