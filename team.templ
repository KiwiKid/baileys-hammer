package main

import (
	"fmt"
    "github.com/dustin/go-humanize"
)

templ teamListFrame(teams []Team, matches []Match){
   <head>
        @headLinks()
        @globalStyles()
    </head>
    <body>
        <div hx-target="this">
            <h1>{fmt.Sprintf("Teams %d", len(teams))}</h1>
            @teamListButton(false)
            for _, t := range teams {
                <details>
                    <summary>
                        {t.TeamName} - {fmt.Sprintf("[%d]", t.ID)}
                    </summary>
                    @teamEditForm(t, matches, "")
                </details>
            }
            @teamAddForm()
            @teamListButton(false)
        </div>
    </body>
}

templ teamList(teams []Team, matches []Match){
    <div hx-target="this">
        <h1>{fmt.Sprintf("Teams %d", len(teams))}</h1>
        @teamListButton(false)
        for _, t := range teams {
            <details>
                <summary>
                    {t.TeamName} - {fmt.Sprintf("[%d]", t.ID)}
                </summary>
                @teamEditForm(t, matches, "")
            </details>
        }
        @teamAddForm()
        @teamListButton(false)
    </div>
}

templ teamListButton(open bool){
	<div class="flex-grow justify-center items-center mb-4">
		<div 
					if open {
						hx-get="/teams" 
                        class={ bigPri }
					 } else { 
						hx-get="/teams?viewMode=button"
                        class={ bigSec }
					}
					hx-trigger="click" 
					hx-swap="outerHTML"
			>
			if !open {
				Close
			}
			Manage Teams    
		</div>
	</div>
}

templ teamAddForm(){
     <form hx-post="/teams"     class="max-w-xl mx-auto bg-white p-8 shadow-md rounded-lg">
    
        <!-- Team Name -->
        <div class="mb-4">
            <label for="teamName" class="block text-gray-700 font-semibold mb-2">Team Name</label>
            <input type="text" id="teamName" name="teamName" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required/>
        </div>
        
        <!-- Team Key -->
        <div class="mb-4">
            <label for="teamKey" class="block text-gray-700 font-semibold mb-2">Team Key</label>
            <input type="text" id="teamKey" name="teamKey" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"/>
        </div>

        <!-- Team Member Password -->
        <div class="mb-4">
            <label for="teamMemberPass" class="block text-gray-700 font-semibold mb-2">Team Member Password</label>
            <input type="password" id="teamMemberPass" name="teamMemberPass" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"/>
        </div>

        <!-- Team Admin Password -->
        <div class="mb-4">
            <label for="teamAdminPass" class="block text-gray-700 font-semibold mb-2">Team Admin Password</label>
            <input type="password" id="teamAdminPass" name="teamAdminPass" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required/>
        </div>

        <!-- Show Fine Add On Home Page -->
        <div class="mb-4">
            <label class="inline-flex items-center">

                <span class="ml-2 text-gray-700">Show Fine Add-On Home Page</span>
                <input type="checkbox" name="showFineAddOnHomePage" class="form-checkbox h-5 w-5 text-blue-600"/>
            </label>
        </div>

        <!-- Show Court Totals -->
        <div class="mb-4">
            <label class="inline-flex items-center">

                <span class="ml-2 text-gray-700">Show Court Totals</span>
                <input type="checkbox" name="showCourtTotals" class="form-checkbox h-5 w-5 text-blue-600"/>
            </label>
        </div>

        <!-- Submit Button -->
        <div class="flex justify-end">
            <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                Submit
            </button>
        </div>
    </form>
}

templ teamEditForm(team Team, matches []Match, msg string){
    <form hx-put={fmt.Sprintf("/teams?teamId=%d", team.ID) } class="max-w-xl mx-auto bg-white p-8 shadow-md rounded-lg" hx-target="this">
    if len(msg) > 0 {
        @success(msg)
    }
        <div class="mb-4">
            <label for="ID" class="block text-gray-700 font-semibold mb-2">Team ID</label>
            <input type="text" disabled="disabled" id="ID" value={ fmt.Sprintf("%d", team.ID) } class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"/>
            <input type="hidden" id="ID" name="ID" value={ fmt.Sprintf("%d", team.ID) } />

        </div>
        <div class="mb-4">
            <label for="teamName" class="block text-gray-700 font-semibold mb-2">Team Name</label>
            <input type="text" id="teamName" name="teamName" value={team.TeamName} class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required/>
        </div>
        
        <!-- Team Key -->
        <div class="mb-4">
            <label for="teamKey" class="block text-gray-700 font-semibold mb-2">Team Key</label>
            <input type="text" id="teamKey" name="teamKey" value={team.TeamKey} class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"/>
        </div>

        <!-- Team Member Password -->
        <div class="mb-4">
            <label for="teamMemberPass" class="block text-gray-700 font-semibold mb-2">Team Member Password</label>
            <input type="password" id="teamMemberPass" name="teamMemberPass" value={team.TeamMemberPass} class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required/>
        </div>

        <select
            name="activeMatchOverrideId"
            required
            class="mt-3 w-full border-gray-300  bg-white rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
        > 
            <option value="">N/A</option>
            for _, m := range matches {
                <option
                    value={ F("%d", m.ID) }
                    if m.ID == team.ActiveMatchIDOverride {
                        selected="selected"
                    }
                >
                        { m.Opponent } at { m.Location } 
                        if m.StartTime != nil {
                            { fmt.Sprintf("-  %s [%s]", humanize.Time(*m.StartTime), m.StartTime.Format("2006-01-02T15:04")) }
                        } 
                </option> 
            }
        </select>

        <!-- Team Admin Password -->
        <div class="mb-4">
            <label for="teamAdminPass" class="block text-gray-700 font-semibold mb-2">Team Admin Password</label>
            <input type="password" id="teamAdminPass" name="teamAdminPass" value={team.TeamAdminPass} class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required/>
        </div>

        <!-- Show Fine Add On Home Page -->
        <div class="mb-4">
            <label class="inline-flex items-center">
              <span class="ml-2 text-gray-700">Show Fine Add-On Home Page</span>
                <input type="checkbox" name="showFineAddOnHomePage" class="form-checkbox h-5 w-5 text-blue-600"
                        if team.ShowFineAddOnHomePage {
                            checked
                        }
                        />
            </label>
        </div>

        <!-- Show Court Totals -->
        <div class="mb-4">
            <label class="inline-flex items-center">
            <span class="ml-2 text-gray-700">Show Court Totals</span>
                <input type="checkbox" name="showCourtTotals"   class="form-checkbox h-5 w-5 text-blue-600"
                    if team.ShowCourtTotals {
                        checked
                    } 
                      />
            </label>
        </div>

        

        <!-- Submit Button -->
        <div class="flex justify-end">
            <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                Submit
            </button>
        </div>
        <details><summary>Delete this team</summary>
            <div class="flex justify-end">
                <button hx-delete={ fmt.Sprintf("/teams?teamId=%d", team.ID) } hx-confirm="are you sure you want to delete this team?" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                    Delete
                </button>
            </div>
        </details>
    </form>

}


templ teamEditFormButton(team Team, open bool){
    if open {
        
    } else {
        <button hx-get={ fmt.Sprintf("/teams?teamId=%d", team.ID)}>Edit Team</button>
    }
    
}

templ courtNotes(teamId uint){
    <div hx-get={ fmt.Sprintf("/teams/court-session?viewMode=court-notes&teamId=%d", teamId) } hx-trigger="revealed" hx-swap="innerHTML" hx-target="this">loading...</div>
}

templ teamActiveMatchAddOrOverrideForm(team *Team, mst *MatchSeasonTeam, matches []Match, msg string){
        <div hx-target="this"> 
            if len(msg) > 0 {
                @success(msg)
            }
    <form hx-post="/teams/active-match">
        <div class="mb-4">
                <label for="ID" class="block text-gray-700 font-semibold mb-2">Team ID</label>
                <input type="hidden" id="ID" name="ID" value={ fmt.Sprintf("%d", team.ID) } class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"/>
            </div>
            <div class="mb-4">
                <select
                    name="activeMatchOverrideId"
                    class="mt-3 w-full border-gray-300  bg-white rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
                > 
                    <option value="">N/A</option>
                    for _, m := range matches {
                        <option
                            value={ F("%d", m.ID) }
                            if team != nil && team.ID == team.ActiveMatchIDOverride {
                                selected="selected"
                            }
                        >
                            { m.Opponent } at { m.Location } 
                            if m.StartTime != nil {
                                { fmt.Sprintf("-  %s [%s]", humanize.Time(*m.StartTime), m.StartTime.Format("2006-01-02T15:04")) }
                            } 
                        </option> 
                    }
                </select>
                <div class="mt-2">
                    <button type="submit" class={ bigPri }>Save Active Match</button>
                </div>
            </div>
            @teamActiveMatchButton(false, mst)
            </form>
    </div>
}

templ teamActiveMatchButton(open bool, matchSeasonTeam *MatchSeasonTeam){
    if matchSeasonTeam == nil {

     <div class="flex-grow justify-center items-center mb-4">
		<div class={ bigPri } 
					if open {
						hx-get="/teams/active-match?viewMode=add-or-override" 
					 } else { 
						hx-get="/teams/active-match?viewMode=button"
					}
					hx-trigger="click" 
					hx-swap="outerHTML"
			>
			if !open {
				Close
			} else {
				No Active Match - (set override here)
			}
		</div>
	</div>
    } else {

        if matchSeasonTeam.Season != nil {
            @success(fmt.Sprintf("Season: %s", matchSeasonTeam.Season.Title))
        }else{
            @warning("no active season?")
        }

        if matchSeasonTeam.Team != nil {
            @success(fmt.Sprintf("Team:%s", matchSeasonTeam.Team.TeamName))
        }else{
            @teamListButton(true)
        }
        
        if matchSeasonTeam.Match != nil {
            @success(fmt.Sprintf("Match: %s", matchSeasonTeam.Match.Opponent))
        }else{
            @warning("no active match?")
        }

    }
}

templ teamCourtNotesButton(open bool){
    <div class="flex-grow justify-center items-center mb-4">
		<div class={ bigPri } 
					if open {
						hx-get="/teams/court-session?viewMode=court-notes-form" 
					 } else { 
						hx-get="/teams/court-session?viewMode=court-notes-form-button"
					}
					hx-trigger="click" 
                    hx-swap="outerHTML"
			>
			if !open {
				Close
			} else {
				Edit	
			}
			Global Court Note
		</div>
	</div>
}

templ teamCourtNotesForm(team Team){
    <form hx-post="/teams/court-session" class="max-w-xl mx-auto bg-white p-8 shadow-md rounded-lg" hx-target="this">
        @teamCourtNotesButton(false)
        <input type="hidden" id="ID" name="ID" value={ fmt.Sprintf("%d", team.ID) } class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"/>
        <div class="mb-4">
            <label for="courtNotes" class="block text-gray-700 font-semibold mb-2">Notes</label>
            <textarea type="text" id="courtNotes" name="courtNotes"  rows="30" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>{ team.CourtNotes }</textarea>
        </div>
        <div class="flex justify-end">
            <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                Submit
            </button>
        </div>
    </form>
}

templ teamCourtNotes(team Team, msg string){

    <div hx-target="this" hx-swap="outerHTML">
    if len(msg) > 0 {
        @success(msg)
    }
    {team.CourtNotes}  @teamCourtNotesButton(true)</div>
}